// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MyMap.DataModel;
using System;
using System.Collections.Generic;

namespace MyMap.DataModel.Migrations
{
    [DbContext(typeof(MyMapDbContext))]
    [Migration("20191007062647_InitMyMapDatabase")]
    partial class InitMyMapDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("MyMap.Domain.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Disabled");

                    b.Property<DateTime?>("LastModifiedDate");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("MyMap.Domain.Spot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AreaId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Disabled");

                    b.Property<float?>("Height");

                    b.Property<DateTime?>("LastModifiedDate");

                    b.Property<decimal?>("Latitude");

                    b.Property<decimal?>("Longitude");

                    b.Property<string>("Name");

                    b.Property<List<string>>("PictureUrls");

                    b.Property<int>("Type");

                    b.Property<int?>("Vote");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Spot");
                });

            modelBuilder.Entity("MyMap.Domain.Spot", b =>
                {
                    b.HasOne("MyMap.Domain.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");
                });
#pragma warning restore 612, 618
        }
    }
}
