// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MyMap.DataModel;
using System;

namespace MyMap.DataModel.Migrations
{
    [DbContext(typeof(MyMapDbContext))]
    [Migration("20191007051905_AddRegionTableAndRelationshipToReportTable")]
    partial class AddRegionTableAndRelationshipToReportTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("MyMap.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Disabled");

                    b.Property<DateTime?>("LastModifiedDate");

                    b.Property<double>("MaxLatitude");

                    b.Property<double>("MaxLongitude");

                    b.Property<double>("MinLatitude");

                    b.Property<double>("MinLongitude");

                    b.Property<string>("Name");

                    b.Property<Guid?>("ParentRegionId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ParentRegionId");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("MyMap.Domain.WayPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Disabled");

                    b.Property<float?>("Height");

                    b.Property<DateTime?>("LastModifiedDate");

                    b.Property<decimal?>("Latitude");

                    b.Property<decimal?>("Longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<Guid?>("RegionId");

                    b.Property<int>("Type");

                    b.Property<int?>("Vote");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("WayPoint");
                });

            modelBuilder.Entity("MyMap.Domain.Region", b =>
                {
                    b.HasOne("MyMap.Domain.Region", "ParentRegion")
                        .WithMany()
                        .HasForeignKey("ParentRegionId");
                });

            modelBuilder.Entity("MyMap.Domain.WayPoint", b =>
                {
                    b.HasOne("MyMap.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });
#pragma warning restore 612, 618
        }
    }
}
